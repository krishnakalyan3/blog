[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Krishna Kalyan",
    "section": "",
    "text": "data-visualization\n\n\nR\n\n\n\n\n\n\n\n\n\n\n\nNov 22, 2020\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\ndata-engineering\n\n\napache-spark\n\n\nperformance\n\n\n\n\n\n\n\n\n\n\n\nNov 12, 2020\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nmachine-learning\n\n\nconda\n\n\nmamba\n\n\nenvironment\n\n\n\n\n\n\n\n\n\n\n\nOct 22, 2020\n\n\n\n\n\n\n  \n\n\n\n\n\n\n\n\n\n\nmachine-learning\n\n\nhardware\n\n\ndeeplearning\n\n\n\n\n\n\n\n\n\n\n\nOct 22, 2020\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "Education\nI have a double Masters in Data Science from Polytechnic University of Catalonia and University of Lyon.\n\n\nOpen Source\n\nPyTorch Benchmark\ntorchaudio\nApache SystemML - GSoC 2017"
  },
  {
    "objectID": "posts/spark-ui/spark-ui-part1.html",
    "href": "posts/spark-ui/spark-ui-part1.html",
    "title": "Building your own Spark UI",
    "section": "",
    "text": "Debugging Spark jobs can be quite hard. Spark UI is one of the most important tools you have at your disposal to quickly investigate the issue you face at the moment. Lets begin by installing Apache Spark from binaries. The latest version of Apache Spark at the time of writing this blog is 3.2.2."
  },
  {
    "objectID": "posts/spark-ui/spark-ui-part1.html#environment",
    "href": "posts/spark-ui/spark-ui-part1.html#environment",
    "title": "Building your own Spark UI",
    "section": "Environment",
    "text": "Environment\nTo prepare our environment let install Java 11 Zulu\ncurl -s \"https://get.sdkman.io\" | bash\nsdk list java\nsdk install java 11.0.17-zulu\nAfter installing the prerequisite software, Let’s start a standalone cluster. In addition there are other ways of deploying a spark cluster which we will not be covering - Mesos - Yarn - Kubernetes\n# Download the latest spark binaries\ntar -xvzf spark-3.2.2-bin-hadoop3.2.tgz\ncd spark-3.2.2-bin-hadoop3.2/sbin\n./start-master.sh\n# Open another tab in the browser to check localhost:8080 works\n# Copy URL, In my case its spark://Sais-Air:7077\n\n./start-worker.sh spark://Sais-Air:7077\n# On the same WebUI you will see a worker registered \nCongratulations, You now have Master UI on http://sais-air:8080/. Let’s submit a test job to make sure everything works well.\n\n\n\nSpark Master Web UI\n\n\n./bin/spark-submit \\\n--class org.apache.spark.examples.SparkPi \\\n--master spark://Sais-Air:7077 \\\nexamples/jars/*-examples_*.jar \\\n1000\n\n\n\n\n\n\nNote\n\n\n\nIf you are using java 17.0.5-zulu, you may need to pass --driver-java-options to fix the error cannot access class sun.nio.ch.DirectBuffer. StackoverFlow"
  },
  {
    "objectID": "posts/spark-ui/spark-ui-part1.html#links",
    "href": "posts/spark-ui/spark-ui-part1.html#links",
    "title": "Building your own Spark UI",
    "section": "Links:",
    "text": "Links:\n\nSdkMan"
  },
  {
    "objectID": "posts/binning-data/binning.html",
    "href": "posts/binning-data/binning.html",
    "title": "Visualize sample data with Histogram",
    "section": "",
    "text": "set.seed(123)\nx <- sample(x = 1:10, replace=TRUE, size  = 10); x\n\n [1]  3  3 10  2  6  5  4  6  9 10\n\n\nThe set.seed function makes sure that every time random data is generated it is the same.\n\nHistogram\nA histogram basically groups data into bins. bins are also called buckets, intervals. Histogram represents the distribution of numerical data. The first step is to bin the data into a series of non overlapping intervals.\n\nhist(x, breaks=3)\n\n\n\n\nThere are many practical applications of Histograms. Some of them are\n\nVisualizing the underlying distribution of data for statistical analysis\nDBBahn uses give fare discounts to people based on age"
  },
  {
    "objectID": "posts/ml-environment/my-env.html",
    "href": "posts/ml-environment/my-env.html",
    "title": "Faster Setup with Mambaforge",
    "section": "",
    "text": "Creating a good repeatable machine learning environment is often glossed over when working on a new python project. I would like to share how I manage and maintain my Python environment."
  },
  {
    "objectID": "posts/ml-environment/my-env.html#mambaforge",
    "href": "posts/ml-environment/my-env.html#mambaforge",
    "title": "Faster Setup with Mambaforge",
    "section": "Mambaforge",
    "text": "Mambaforge\nMambaforge is a minimal installer for conda that also includes mamba and is configured with conda-forge as the default and only channel. Anaconda or Conda is known for being slow when trying to resolve conflicts between dependencies and installing new packages. Mamba is a replacement for Conda. It’s written in C++ for faster execution. Even on a M1 mac it can be a great choice.\nAnaconda has also recently changed its TOS and it’s not too clear how this affects us. Sticking to mamba would be a better choice according to me."
  },
  {
    "objectID": "posts/ml-environment/my-env.html#installation",
    "href": "posts/ml-environment/my-env.html#installation",
    "title": "Faster Setup with Mambaforge",
    "section": "Installation",
    "text": "Installation\nYou can install the latest version of Mambaforge by running the commands below or using this script.\nwget https://github.com/conda-forge/miniforge/releases/latest/download/Mambaforge-Linux-x86_64.sh\nbash Mambaforge-Linux-x86_64.sh -b\n~/mambaforge/bin/mamba init\nExit your current shell session and start another one. Type the command conda --help to check that conda environment variables are correctly set.\nusage: conda [-h] [-V] command ...\n\nconda is a tool for managing and deploying applications, environments and packages.\n\nOptions:\n…\nYou will observe that conda config --show channels conda-forge is set as the default channel.\nchannels:\n  - conda-forge"
  },
  {
    "objectID": "posts/ml-environment/my-env.html#creating-a-new-environment",
    "href": "posts/ml-environment/my-env.html#creating-a-new-environment",
    "title": "Faster Setup with Mambaforge",
    "section": "Creating a New Environment",
    "text": "Creating a New Environment\nSimply use the commands below create a new environment called my_env with python 3.9 interpreter.\nconda create -n my_env python=3.9\nconda activate my_env\nUse pip install or conda install to install the package of your choice to your environment. ## Useful Commands Other than the commands mentioned above you may find these commands below useful.\n# All conda env created\nconda env list\n# All packages in current conda env\nconda list\n# System information\nconda info"
  },
  {
    "objectID": "posts/ml-environment/my-env.html#links",
    "href": "posts/ml-environment/my-env.html#links",
    "title": "Faster Setup with Mambaforge",
    "section": "Links",
    "text": "Links\n\nFastAI Setup\nMy Script\nMambaforge"
  },
  {
    "objectID": "posts/deep-learning-pc/index.html",
    "href": "posts/deep-learning-pc/index.html",
    "title": "Building your own Deep Learning Workstation",
    "section": "",
    "text": "I live in Germany. All my parts were purchased from Mindfactory. Building a PC for the first time can be overwhelming and a daunting task. Spoiler Alert: It might be easier that you think.\n\n\n\nParts\nCompany\nPrice (Euros)\n\n\n\n\nMother Board\nGigabyte Z390 AORUS PRO\n170.81\n\n\nProcessor\nIntel Core i9-9900 3.1 GHz 8-Core Processor\n346.89\n\n\nCooler\nbe quiet! Dark Rock Pro 4 50.5 CFM CPU Cooler\n67.22\n\n\nPSU\nbe quiet! Straight Power 11 750 W 80+ Gold\n115.85\n\n\nRAM\nG.Skill Aegis 16 GB (4 x 8 GB) DDR4-3000 CL16 Memory\n97.5\n\n\nStorage\nCrucial P1 1 TB M.2-2280 NVME Solid State Drive\n94.00\n\n\nCase\nbe quiet! Silent Base 601 ATX Mid Tower Case\n106.68\n\n\nGold Service\nMindfactory\n10\n\n\nGPU\n8GB Gigabyte GeForce RTX 3070\n649\n\n\nGrand Total\n\n1647.95"
  },
  {
    "objectID": "posts/deep-learning-pc/index.html#motivation",
    "href": "posts/deep-learning-pc/index.html#motivation",
    "title": "Building your own Deep Learning Workstation",
    "section": "Motivation",
    "text": "Motivation\nI wanted to build a PC that could be used for Machine Learning. I also wanted to have complete control over hardware for upgradability and predictable hardware performance. That’s what I want you to believe, the truth is that I want to play computer games ;)."
  },
  {
    "objectID": "posts/deep-learning-pc/index.html#basic-setup",
    "href": "posts/deep-learning-pc/index.html#basic-setup",
    "title": "Building your own Deep Learning Workstation",
    "section": "Basic setup",
    "text": "Basic setup\nUse PC PartPicker. This helps you to choose your parts wisely, you will be warned that you are building a PC with incompatible parts.\n\nMotherboard\nChoose your motherboard first. Make sure that it fits your requirements (You will need to decide if you want to go for an AMD or an Intel Motherboard). I needed a motherboard with at least 4 RAM slots and at least 2 PCIe lanes for GPUs.\nJust buy any decent motherboard in the market. There are a lot of companies that sell motherboards that can be overclocked. You might not need it for deep learning.\n\nDeep Learning on an overclocked machine does not lead to performance improvements.\n\n\n\nCPU\nIntel CPU i9 comes with hyperthreading. (Basically two threads per CPU core instead of one per core). This is useful if you want to process data in parallel. I also got a great deal on Intel CPU because I know someone working there.\n\n\nRAM\nI chose 16 GB RAM to begin with. I intend to expand to 32GB later. That’s the reason why I needed a Motherboard with 4 RAM slots. In case you intend to get 24GB GPU (RTX 3090) make sure you have at least 32GB RAM.\n\nJust buy the cheapest DDR4 RAM available out there with a clock frequency greater than 2400.\n\n\n\nCooling\nYou need to choose if you need Liquid Cool or Air Cool. I would recommend that you Air cool your PC. Some Advantages\n\nThey do not leak\nEasier to upgrade\nMuch Cheaper\n\nI needed a single GPU for my needs (games / deep learning experiments). At worst, I would use 2 GPUs.\n\n\nNVMe\nI needed hot storage for reading data quickly. NVMe SSDs are perfect for this. Some motherboards do not have this option. I went for the cheaper NVMe from Crucial instead of Samsung. There is a minor difference in performance according to the benchmark tests.\n\n\nGPU\nRight now there is a shortage of GPUs in the Market. The new RTX 30xx series is cheaper and faster than the RTX 20xx series.\nI am currently testing 8GB Gigabyte GeForce RTX 3070. It has 3 fans which keeps the GPU temperature manageable. Games run flawlessly. I have no complaints related to performance of my ML experiments.\n\nMake sure you install your GPU in the first PCIe slot to get the best performance.\n\n\n\nPower Supply\nPC PartPicker will help you with that based on the configuration you have chosen. Suppose my configuration required 600W. I would keep an extra headroom for another 100-150W (Making it a total of 750W).\n\n\nStorage / Cabinet and Other Parts\nMake sure you already have an External Monitor, Mouse, Keyboard. You might also need to buy a good power strip for powering up your monitors and PSU. Keep screwdrivers handy.\n\n\nAssembling\nI would first check if all parts are working before installing the part to the Cabinet. This way you can check for defects and order replacements quickly if required.\n\nMotherboard lies on its box\nInstall RAM\nInstall NVMe\nInstall CPU\nInstall Cooler\nInstall GPU\nConnect PSU to the Motherboard\nConnect Cabinet Power to the Motherboard\nConnect Keyboard, Monitor to the Motherboard\n\nOnce you have connected everything so far, switch on the PSU and press the power button. If things are set up correctly, you will see a BIOS screen and Congratulations!. Now all you need to do is to move everything into the cabinet. Be gentle / accurate while plugging in different components, Try not bending the pin(s) like I did."
  },
  {
    "objectID": "posts/deep-learning-pc/index.html#final-thoughts",
    "href": "posts/deep-learning-pc/index.html#final-thoughts",
    "title": "Building your own Deep Learning Workstation",
    "section": "Final Thoughts",
    "text": "Final Thoughts\nIf you are doing this for the first time make sure you have a friend who has already done this. Be prepared to spend at least half a day if you have everything right. You can save yourself the pain of assembling by requesting Mindfactory or your local PC store will do it for you (Approx 100-200€). I also sold my Macbook Air for 262€."
  },
  {
    "objectID": "posts/deep-learning-pc/index.html#links",
    "href": "posts/deep-learning-pc/index.html#links",
    "title": "Building your own Deep Learning Workstation",
    "section": "Links",
    "text": "Links\n\nMy Build on PC Part Picker\nTim Dettmers Blog\nBuild your deep learning box Fast AI thread\nMindfactory"
  }
]